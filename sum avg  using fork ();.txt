sum avg  using fork ();
#include <iostream>
#include <unistd.h>

using namespace std;

int main() {
    int a[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int sum = 0, avg = 0, n, i;

    n = fork();

    if (n > 0) { // Parent process
        for (i = 0; i < 10; i++) {
            sum += a[i];
        }
        avg = sum / 10;

        cout << "Parent process" << endl;
        cout << "Sum of all elements: " << sum << endl;
        cout << "Average of all elements: " << avg << endl;
    } else if (n == 0) { // Child process
        int childSum = 0;
        for (i = 0; i < 5; i++) { // Calculate sum for half of the elements
            childSum += a[i];
        }

        cout << "Child process" << endl;
        cout << "Sum of half elements: " << childSum << endl;
    }

    return 0;
}



#include <iostream>
#include <unistd.h>
#include <sys/wait.h>

using namespace std;

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int arr_size = sizeof(arr) / sizeof(int);
    int start, end;
    int fd[2];

    if (pipe(fd) == -1) {
        cerr << "Pipe failed" << endl;
        return 1;
    }

    int pid = fork();

    if (pid == 0) {
        // Child process 1
        start = 0;
        end = arr_size / 2;

        int sum = 0;
        for (int i = start; i < end; i++) {
            sum += arr[i];
        }

        close(fd[0]);
        write(fd[1], &sum, sizeof(sum));
        close(fd[1]);

        return 0;
    } else {
        // Parent process or Child process 2
        if (pid > 0) {
            // Parent process
            wait(NULL);

            start = arr_size / 2;
            end = arr_size;

            int sum = 0;
            int child_sum;

            close(fd[1]);
            read(fd[0], &child_sum, sizeof(child_sum));
            close(fd[0]);

            for (int i = start; i < end; i++) {
                sum += arr[i];
            }

            sum += child_sum;

            double avg = (double)sum / arr_size;

            cout << "Total sum: " << sum << endl;
            cout << "Average: " << avg << endl;
        } else {
            // Child process 2
            start = arr_size / 2;
            end = arr_size;

            int sum = 0;
            for (int i = start; i < end; i++) {
                sum += arr[i];
            }

            close(fd[1]);
            write(fd[0], &sum, sizeof(sum));
            close(fd[0]);

            return 0;
        }
    }

    return 0;
}